"use strict";(self.webpackChunknimble_design_system=self.webpackChunknimble_design_system||[]).push([[756],{"./stories/NimbleRadioButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{NimbleRadioButtonGroups:()=>NimbleRadioButtonGroups,NimbleRadioButtonGroupsRows:()=>NimbleRadioButtonGroupsRows,NimbleRadioButtonGroupsWithDefaultValue:()=>NimbleRadioButtonGroupsWithDefaultValue,NimbleRadioButtonGroupsWithDisabled:()=>NimbleRadioButtonGroupsWithDisabled,NimbleStandaloneRadio:()=>NimbleStandaloneRadio,NimbleStandaloneRadioWithChecked:()=>NimbleStandaloneRadioWithChecked,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Nimble Form Inputs/Nimble Radio Button",component:__webpack_require__("./src/index.ts").AO,parameters:{docs:{iframeHeight:600,previewSource:"open"}}},NimbleRadioButtonGroupsRows={args:{groupLabel:"Nimble Radio Group",onChange:value=>console.log("selected option: ",value),radioGroups:[{label:"Option A",value:"A"},{label:"Option B",value:"B"},{label:"Option C",value:"C"}]}},NimbleRadioButtonGroups={args:{groupLabel:"Nimble Radio Group",isRowGroup:!1,onChange:value=>console.log("selected option: ",value),radioGroups:[{label:"Option A",value:"A"},{label:"Option B",value:"B"},{label:"Option C",value:"C"}]}},NimbleRadioButtonGroupsWithDisabled={args:{groupLabel:"Nimble Radio Group",onChange:value=>console.log("selected option: ",value),radioGroups:[{label:"Option A",value:"A"},{label:"Option B",value:"B",disabled:!0},{label:"Option C",value:"C"}]}},NimbleRadioButtonGroupsWithDefaultValue={args:{groupLabel:"Nimble Radio Group",onChange:value=>console.log("selected option: ",value),defaultValue:"B",radioGroups:[{label:"Option A",value:"A"},{label:"Option B",value:"B"},{label:"Option C",value:"C"}]}},NimbleStandaloneRadio={args:{onChange:value=>console.log("selected option: ",value),type:"standalone",standaloneRadioValue:"A"}},NimbleStandaloneRadioWithChecked={args:{onChange:value=>console.log("selected option: ",value),type:"standalone",standaloneRadioValue:"A",defaultValue:"A"}};NimbleRadioButtonGroupsRows.parameters={...NimbleRadioButtonGroupsRows.parameters,docs:{...NimbleRadioButtonGroupsRows.parameters?.docs,source:{originalSource:"{\n  args: {\n    groupLabel: 'Nimble Radio Group',\n    onChange: (value: string) => console.log('selected option: ', value),\n    radioGroups: [{\n      label: 'Option A',\n      value: 'A'\n    }, {\n      label: 'Option B',\n      value: 'B'\n    }, {\n      label: 'Option C',\n      value: 'C'\n    }]\n  }\n}",...NimbleRadioButtonGroupsRows.parameters?.docs?.source}}},NimbleRadioButtonGroups.parameters={...NimbleRadioButtonGroups.parameters,docs:{...NimbleRadioButtonGroups.parameters?.docs,source:{originalSource:"{\n  args: {\n    groupLabel: 'Nimble Radio Group',\n    isRowGroup: false,\n    onChange: (value: string) => console.log('selected option: ', value),\n    radioGroups: [{\n      label: 'Option A',\n      value: 'A'\n    }, {\n      label: 'Option B',\n      value: 'B'\n    }, {\n      label: 'Option C',\n      value: 'C'\n    }]\n  }\n}",...NimbleRadioButtonGroups.parameters?.docs?.source}}},NimbleRadioButtonGroupsWithDisabled.parameters={...NimbleRadioButtonGroupsWithDisabled.parameters,docs:{...NimbleRadioButtonGroupsWithDisabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    groupLabel: 'Nimble Radio Group',\n    onChange: (value: string) => console.log('selected option: ', value),\n    radioGroups: [{\n      label: 'Option A',\n      value: 'A'\n    }, {\n      label: 'Option B',\n      value: 'B',\n      disabled: true\n    }, {\n      label: 'Option C',\n      value: 'C'\n    }]\n  }\n}",...NimbleRadioButtonGroupsWithDisabled.parameters?.docs?.source}}},NimbleRadioButtonGroupsWithDefaultValue.parameters={...NimbleRadioButtonGroupsWithDefaultValue.parameters,docs:{...NimbleRadioButtonGroupsWithDefaultValue.parameters?.docs,source:{originalSource:"{\n  args: {\n    groupLabel: 'Nimble Radio Group',\n    onChange: (value: string) => console.log('selected option: ', value),\n    defaultValue: 'B',\n    radioGroups: [{\n      label: 'Option A',\n      value: 'A'\n    }, {\n      label: 'Option B',\n      value: 'B'\n    }, {\n      label: 'Option C',\n      value: 'C'\n    }]\n  }\n}",...NimbleRadioButtonGroupsWithDefaultValue.parameters?.docs?.source}}},NimbleStandaloneRadio.parameters={...NimbleStandaloneRadio.parameters,docs:{...NimbleStandaloneRadio.parameters?.docs,source:{originalSource:"{\n  args: {\n    onChange: (value: string) => console.log('selected option: ', value),\n    type: 'standalone',\n    standaloneRadioValue: 'A'\n  }\n}",...NimbleStandaloneRadio.parameters?.docs?.source}}},NimbleStandaloneRadioWithChecked.parameters={...NimbleStandaloneRadioWithChecked.parameters,docs:{...NimbleStandaloneRadioWithChecked.parameters?.docs,source:{originalSource:"{\n  args: {\n    onChange: (value: string) => console.log('selected option: ', value),\n    type: 'standalone',\n    standaloneRadioValue: 'A',\n    defaultValue: 'A'\n  }\n}",...NimbleStandaloneRadioWithChecked.parameters?.docs?.source}}};const __namedExportsOrder=["NimbleRadioButtonGroupsRows","NimbleRadioButtonGroups","NimbleRadioButtonGroupsWithDisabled","NimbleRadioButtonGroupsWithDefaultValue","NimbleStandaloneRadio","NimbleStandaloneRadioWithChecked"]}}]);